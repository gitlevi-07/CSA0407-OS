#include <stdio.h>

struct Process {
	int pid;
	int burst;
	int priority;
	int waiting;
	int tat;
};

void swap(struct Process *a, struct Process *b) {
	struct Process temp = *a;
	*a = *b;
	*b = temp;
}

void sortByPriority(struct Process proc[], int n) {
	for (int i = 0; i < n - 1; i++) {
		for (int j = i + 1; j < n; j++) {
			if (proc[i].priority > proc[j].priority) {
				swap(&proc[i], &proc[j]);
			}
		}
	}
}

int main() {
	int n;
	printf("Enter number of processes: ");
	scanf("%d", &n);

	struct Process proc[n];

	for (int i = 0; i < n; i++) {
		proc[i].pid = i + 1;
		printf("Enter Burst Time for P%d: ", i + 1);
		scanf("%d", &proc[i].burst);
		printf("Enter Priority for P%d (lower = higher priority): ", i + 1);
		scanf("%d", &proc[i].priority);
	}


	sortByPriority(proc, n);

	proc[0].waiting = 0;
	proc[0].tat = proc[0].burst;

	for (int i = 1; i < n; i++) {
		proc[i].waiting = proc[i - 1].waiting + proc[i - 1].burst;
		proc[i].tat = proc[i].waiting + proc[i].burst;
	}

	float totalWT = 0, totalTAT = 0;
	printf("\nProcess\tBT\tPriority\tWT\tTAT\n");
	for (int i = 0; i < n; i++) {
		printf("P%d\t%d\t%d\t\t%d\t%d\n", proc[i].pid,
		       proc[i].burst, proc[i].priority,
		       proc[i].waiting, proc[i].tat);
		totalWT += proc[i].waiting;
		totalTAT += proc[i].tat;
	}

	printf("\nAverage Waiting Time = %.2f", totalWT / n);
	printf("\nAverage Turnaround Time = %.2f\n", totalTAT / n);

	return 0;
}
